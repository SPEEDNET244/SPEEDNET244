#! /bin/bashfun_bar () {comando[0]= " $1 "comando[1]= " $2 "([[ -e $HOME /fim ]] && rm $HOME /fim[[ ! -e /usr/lib/sshplus ]] && rm -rf /bin/menu > /dev/null 2>&1${comando[0]} -y > /dev/null 2>&1${comando[1]} -y > /dev/null 2>&1toque em $HOME /fim) > /dev/null 2>&1 &tput civisecho -ne " \033[1;33m[ "enquanto verdadeiro ; Faz for (( i = 0 ; i < 18 ; i ++ )) ; Faz echo -ne " \033[1;31m# " dormir 0,1s feito [[ -e $HOME /fim ]] && rm $HOME /fim && break echo -e " \033[1;33m] " dormir 1s tput cuu1 tput dl1 echo -ne " \033[1;33m[ "feitoecho -e " \033[1;33m]\033[1;37m -\033[1;32m OK !\033[1;37m "tput cnorm}IP= $( cat /etc/IP )x= " ok "cardápio (){velocidade () {aguarde () {comando[0]= " $1 "comando[1]= " $2 "([[ -e $HOME /fim ]] && rm $HOME /fim[[ ! -d /etc/SSHPlus ]] && rm -rf /bin/menu${comando[0]} > /dev/null 2>&1${comando[1]} > /dev/null 2>&1toque em $HOME /fim) > /dev/null 2>&1 &tput civisecho -ne " \033[1;33mAGUARDE \033[1;37m- \033[1;33m[ "enquanto verdadeiro ; Faz for (( i = 0 ; i < 18 ; i ++ )) ; Faz echo -ne " \033[1;31m# " dormir 0,1s feito [[ -e $HOME /fim ]] && rm $HOME /fim && break echo -e " \033[1;33m] " dormir 1s tput cuu1 tput dl1 echo -ne " \033[1;33mAGUARDE \033[1;37m- \033[1;33m[ "feitoecho -e " \033[1;33m]\033[1;37m -\033[1;32m OK !\033[1;37m "tput cnorm}fun_tst () {speedtest --share > velocidade}eco " "echo -e " \033[1;32mTESTANDO A VELOCIDADE DO SERVIDOR !\033[0m "eco " "aguarde ' fun_tst 'eco " "png= $( cat speed | sed -n ' 5 p ' | awk -F : { ' print $ NF ' } )down= $( cat speed | sed -n ' 7 p ' | awk -F : { ' print $ NF ' } )upl= $( cat speed | sed -n ' 9 p ' | awk -F : { ' print $ NF ' } )lnk= $( cat speed | sed -n ' 10 p ' | awk { ' print $ NF ' } )echo -e " \033[0;34m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━. ━━━━━━━━━━\033[0m "echo -e " \033[1;32mPING (LATENCIA):\033[1;37m $png "echo -e " \033[1;32mDOWNLOAD:\033[1;37m $down "echo -e " \033[1;32mUPLOAD:\033[1;37m $upl "echo -e " \033[1;32mLINK: \033[1;36m $lnk \033[0m "echo -e " \033[0;34m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━. ━━━━━━━━━━\033[0m "rm -rf $HOME /velocidade}# limitadorfunção limite1 () { Claro echo -e " \n\033[1;32mINICIANDO O LIMITER... \033[0m " eco " " fun_bar ' screen -dmS limitador limitador ' ' sleep 3 ' [[ $( grep -wc " limitador " /etc/autostart ) = ' 0 ' ]] && { echo -e " ps x | grep 'limiter' | grep -v 'grep' && echo 'ON' || screen -dmS limitador limitador " >> /etc/autostart } || { sed -i ' /limiter/d ' /etc/autostart	 echo -e " ps x | grep 'limiter' | grep -v 'grep' && echo 'ON' || screen -dmS limitador limitador " >> /etc/autostart } echo -e " \n\033[1;32m LIMITER ATIVO !\033[0m " dormir 3 cardápio}função limite2 () { Claro echo -e " \033[1;32mPARANDO O LIMITADOR... \033[0m " eco " " fun_stplimiter () { dormir 1 screen -r -S " limitador " -X sair screen -wipe 1> /dev/null 2> /dev/null [[ $( grep -wc " limiter " /etc/autostart ) != ' 0 ' ]] && { sed -i ' /limiter/d ' /etc/autostart } dormir 1 } fun_bar ' fun_stplimiter ' ' dormir 3 ' echo -e " \n\033[1;31m LIMITER PARADO !\033[0m " dormir 3 cardápio}função limite_ssh () {[[ $( ps x | grep " limitador " | grep -v grep | wc -l ) = ' 0 ' ]] && limit1 || limite2}#aplicativo onlinefunção onapp1 () { Claro echo -e " \n\033[1;32mINICIANDO O APLICATIVO ONLINE... \033[0m " eco " " apt install apache2 -y > /dev/null 2>&1 sed -i " s/Listen 80/Listen 8888/g " /etc/apache2/ports.conf > /dev/null 2>&1 serviço apache2 reiniciar rm -rf /var/www/html/server > /dev/null 2>&1 mkdir /var/www/html/server > /dev/null 2>&1 fun_bar ' screen -dmS onlineapp onlineapp ' ' sleep 3 ' [[ $( grep -wc " onlineapp " /etc/autostart ) = ' 0 ' ]] && { echo -e " ps x | grep 'onlineapp' | grep -v 'grep' && echo 'ON' || screen -dmS onlineapp onlineapp " >> /etc/autostart } || { sed -i ' /onlineapp/d ' /etc/autostart	 echo -e " ps x | grep 'onlineapp' | grep -v 'grep' && echo 'ON' || screen -dmS onlineapp onlineapp " >> /etc/autostart } IP= $( wget -qO- ipv4.icanhazip.com ) > /dev/null 2>&1 echo -e " \n\033[1;32m APLICATIVO ONLINE ATIVO !\033[0m " echo -e " \033[1;31m \033[1;33mURL de Usuários Online para usar no App\033[0m " echo -e " http:// $IP :8888/server/online " dormir 10 cardápio}função onapp2 () { Claro echo -e " \033[1;32mPARANDO O APLICATIVO ONLINE... \033[0m " eco " " fun_stponlineapp () { dormir 1 screen -r -S " onlineapp " -X sair screen -wipe 1> /dev/null 2> /dev/null [[ $( grep -wc " onlineapp " /etc/autostart ) != ' 0 ' ]] && { sed -i ' /onlineapp/d ' /etc/autostart } dormir 1 } fun_bar ' fun_stponlineapp ' ' dormir 3 ' rm -rf /var/www/html/server > /dev/null 2>&1 echo -e " \n\033[1;31m APLICATIVO ONLINE PARADO !\033[0m " dormir 3 cardápio}função onapp_ssh () {[[ $( ps x | grep " onlineapp " | grep -v grep | wc -l ) = ' 0 ' ]] && onapp1 || onapp2}## _função autoexec () { if grep " menu; " /etc/profile > /dev/null ; então Claro echo -e " \033[1;32mDESATIVANDO AUTO EXECUÇÃO\033[0m " offautmenu () { sed -i ' /menu;/d ' /etc/profile } eco " " fun_bar ' offautmenu ' eco " " echo -e " \033[1;31mAUTO EXECUÇÃO DESATIVADO!\033[0m " dormir 1,5s menu2 senão Claro echo -e " \033[1;32mATIVANDO AUTO EXECUÇÃO\033[0m " menu automático () { grep -v " ^menu; " /etc/profile > /tmp/tmpass && mv /tmp/tmpass /etc/profile echo " menu; " >> /etc/profile } eco " " fun_bar ' autmenu ' eco " " echo -e " \033[1;32mAUTO EXECUÇÃO ATIVADO!\033[0m " dormir 1,5s menu2 fi }# menu2menu2 (){[[ -e /etc/Plus-torrent ]] && stsf= $( echo -e " \033[1;32m◉ " ) || stsf= $( echo -e " \033[1;31m○ " )stsbot= $( ps x | grep " bot_plus " | grep -v grep > /dev/null && echo -e " \033[1;32m◉ " || echo -e " \033[1;31m○ " )stsbotteste= $( ps x | grep " bot_teste " | grep -v grep > /dev/null && echo -e " \033[1;32m◉ " || echo -e " \033[1;31m○ " )stsbotrev= $( ps x | grep " bot_rev " | grep -v grep > /dev/null && echo -e " \033[1;32m◉ " || echo -e " \033[1;31m○ " )autm= $( grep " menu; " /etc/profile > /dev/null && echo -e " \033[1;32m◉ " || echo -e " \033[1;31m○ " )[[ ! -e /usr/lib/licence ]] && rm -rf /bin > /dev/null 2>&1if [[ " $( grep -c " Ubuntu " /etc/issue.net ) " = " 1 " ]] ; entãosystem= $( cut -d ' ' -f1 /etc/issue.net )sistema+= $( echo ' ' )system+= $( cut -d ' ' -f2 /etc/issue.net | awk -F " . " ' {print $1} ' )elif [[ " $( grep -c " Debian " /etc/issue.net ) " = " 1 " ]] ; entãosystem= $( cut -d ' ' -f1 /etc/issue.net )sistema+= $( echo ' ' )system+= $( cut -d ' ' -f3 /etc/issue.net )senãosystem= $( cut -d ' ' -f1 /etc/issue.net )fi_ons= $( ps -x | grep sshd | grep -v root | grep priv | wc -l )[[ " $( cat /etc/SSHPlus/Exp ) " != " " ]] && _expuser= $( cat /etc/SSHPlus/Exp ) || _expuser= " 0 "[[ -e /etc/openvpn/openvpn-status.log ]] && _onop= $( grep -c " 10.8.0 " /etc/openvpn/openvpn-status.log ) || _onop= " 0 "[[ -e /etc/default/dropbear ]] && _drp= $( ps aux | grep dropbear | grep -v grep | wc -l ) _ondrp= $(( $_drp - 1 )) || _ondrp= " 0 "_onli= $(( $_ons + $_onop + $_ondrp ))_ram= $( printf ' %-9s ' " $( free -h | grep -i mem | awk { ' print $ 2 ' } ) " )_usor= $( printf ' %-8s ' " $( free -m | awk ' NR==2{printf "%.2f%%", $3*100/$2 } ' ) " )_usop= $( printf ' %-1s ' " $( top -bn1 | awk ' /Cpu/ { cpu = "" 100 - $8 "%" }; END { print cpu } ' ) " )_core= $( printf ' %-1s ' " $( grep -c cpu[0-9] /proc/stat ) " )_system= $( printf ' %-14s ' " $ system " )_hora= $( printf ' %(%H:%M:%S)T ' )_onlin= $( printf ' %-5s ' " $_onli " )_userexp= $( printf ' %-5s ' " $_expuser " )_tuser= $( awk -F: ' $3>=1000 {print $1} ' /etc/passwd | grep -v ninguém | wc -l )Claroecho -e " \033[0;35m╔─━━━━━━━━━━━━━━━━━━━━━━━VIP VPS━━━━━━━━━━━VIP VPS━━━━━━━━━━━━━━ ━━━━━━━━─╗\033[0m "echo -e " \E[42;1;37m • SPEEDNET PLUS• \E[0m "echo -e " \033[0;35m╚━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━. ━━━━━━━━━━━━━━╝\033[0m "echo -e " \033[1;32mSISTEMA MEMÓRIA RAM PROCESSADOR "echo -e " \033[1;31mOS: \033[1;37m $_system \033[1;31mTotal:\033[1;37m $_ram \033[1;31mNucleos: \033[1;37m $_core \ 033[0m "echo -e " \033[1;31mHora: \033[1;37m $_hora \033[1;31mEm uso: \033[1;37m $_usor \033[1;31mEm uso: \033[1;37m $ _usop \033[0m "echo -e " \033[0;35m╔━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━. ━━━━━━━━━━━━━━╗\033[0m "[[ ! -e /tmp/att ]] && { echo -e " \033[1;32mOnlines:\033[1;37m $_onlin \033[1;31mExpirados: \033[1;37m $_userexp \033[1;33mTotal: \033[1;37m $_tuser \ 033[0m " var01= ' \033[1;37m• '} || { echo -e " \033[1;33m[\033[1;31m!\033[1;33m] \033[1;32mEXISTE UMA ATUALIZACAO DISPONIVEL \033[1;33m[\033[1;31m!\033] [1;33m]\033[0m " var01= " \033[1;32m! "}echo -e " \033[0;35m╚━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━. ━━━━━━━━━━━━━━╝\033[0m "echo -e " \033[1;31m[\033[1;36m21\033[1;31m] \033[1;37m• \033[1;33mADICIONAR HOST \033[1;31m [\033[1; 36m28\033[1;31m] \033[1;37m• \033[1;33mMUDAR SENHA ROOT \033[1;31m[\033[1;36m22\033[1;31m] \033[1;37m• \033[1;33mREMOVER HOST \033[1;31m [\033[1;36m29\033[1;31m] \033] [1;37m• \033[1;33mAUTO EXECUCAO $autm \033[1;31m][\033[1;36m23\033[1;31m] \033[1;37m• \033[1;33mREINICIAR SISTEMA \033[1;31m [\033[1;36m30\033[1;31m] $var01 ] \033[1;33mATUALIZAR SCRIPT \033[1;31m[\033[1;36m24\033[1;31m] \033[1;37m• \033[1;33mREINICIAR SERVIÇOS \033[1;31m [\033[1;36m31\033[1;31m] \033] [1;37m• \033[1;33mREMOVER SCRIPT \033[1;31m][\033[1;36m25\033[1;31m] \033[1;37m• \033[1;33mBLOCK TORRENT $stsf \033[1;31m [\033[1;36m32\033[1;31m] \033[1;37m• \033[1;33mSINCRONIZAR PAINEL WEB $stsbotrev \033[1;31m[\033[1;36m26\033[1;31m] \033[1;37m• \033[1;33mBOT TELEGRAM $stsbot \033[1;31m [\033[1;36m33\033[1;31m] \033[1;37m• \033[1;33mBLOQUEAR SITE \033[1;32m<\033[1;33m<\033[1;31m< \033[1;31m][\033[1;36m27\033[1;31m] \033[1;37m• \033[1;33mBOT TESTE $stsbotteste \033[1;31m] [\033[1;36m00\033[1;31m] \033[1;37m• \033[1;33mVOLTAR \033[1;32m<\033[1;33m<\033[1;31m<\033[1;31m "echo -e " \033[0;35m╚━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━. ━━━━━━━━━━━━━━╝\033[0m "echo -ne " ∎≫ \033[1;32mO QUE DESEJA FAZER \033[1;33m?\033[1;31m?\033[1;37m : " ; leia xcaso " $x " em 21) Claro adicionar host echo -ne " \n\033[1;31mENTER \033[1;33mpara retornar ao \033[1;32mMENU!\033[0m " ; leitura menu2 ;; 22) Claro anular echo -ne " \n\033[1;31mENTER \033[1;33mpara retornar ao \033[1;32mMENU!\033[0m " ; leitura menu2 ;; 23) Claro reservarsistema ;; 24) Claro reservarservicos dormir 3 ;; 25) bloco ;; 26) botssh ;; 27) botteste.sh ;; 28) Claro senharoot dormir 3 ;; 29) autoexec ;; 30) script ;; 31) Claro descritivo ;; 32) Claro bash <( wget -qO-sshplus.xyz/scripts/utilitarios/syncpainel/inst ) ;; 00) cardápio ;; 33|33) site de bloqueio ;; * ) echo -e " \n\033[1;31mOpcao invalida !\033[0m " dormir 2esac}enquanto verdadeiro $x ! = " ok "Fazstsl= $( ps x | grep " limitador " | grep -v grep > /dev/null && echo -e " \033[1;32m◉ " || echo -e " \033[1;31m○ " )stson= $( ps x | grep " onlineapp " | grep -v grep > /dev/null && echo -e " \033[1;32m◉ " || echo -e " \033[1;31m○ " )stsu= $( ps x | grep " udpvpn " | grep -v grep > /dev/null && echo -e " \033[1;32m◉ " || echo -e " \033[1;31m○ " )if [[ " $( grep -c " Ubuntu " /etc/issue.net ) " = " 1 " ]] ; entãosystem= $( cut -d ' ' -f1 /etc/issue.net )sistema+= $( echo ' ' )system+= $( cut -d ' ' -f2 /etc/issue.net | awk -F " . " ' {print $1} ' )elif [[ " $( grep -c " Debian " /etc/issue.net ) " = " 1 " ]] ; entãosystem= $( cut -d ' ' -f1 /etc/issue.net )sistema+= $( echo ' ' )system+= $( cut -d ' ' -f3 /etc/issue.net )senãosystem= $( cut -d ' ' -f1 /etc/issue.net )fi_ons= $( ps -x | grep sshd | grep -v root | grep priv | wc -l )[[ " $( cat /etc/SSHPlus/Exp ) " != " " ]] && _expuser= $( cat /etc/SSHPlus/Exp ) || _expuser= " 0 "[[ -e /etc/openvpn/openvpn-status.log ]] && _onop= $( grep -c " 10.8.0 " /etc/openvpn/openvpn-status.log ) || _onop= " 0 "[[ -e /etc/default/dropbear ]] && _drp= $( ps aux | grep dropbear | grep -v grep | wc -l ) _ondrp= $(( $_drp - 1 )) || _ondrp= " 0 "_onli= $(( $_ons + $_onop + $_ondrp ))_ram= $( printf ' %-9s ' " $( free -h | grep -i mem | awk { ' print $ 2 ' } ) " )_usor= $( printf ' %-8s ' " $( free -m | awk ' NR==2{printf "%.2f%%", $3*100/$2 } ' ) " )_usop= $( printf ' %-1s ' " $( top -bn1 | awk ' /Cpu/ { cpu = "" 100 - $8 "%" }; END { print cpu } ' ) " )_core= $( printf ' %-1s ' " $( grep -c cpu[0-9] /proc/stat ) " )_system= $( printf ' %-14s ' " $ system " )_hora= $( printf ' %(%H:%M:%S)T ' )_onlin= $( printf ' %-5s ' " $_onli " )_userexp= $( printf ' %-5s ' " $_expuser " )_tuser= $( awk -F: ' $3>=1000 {print $1} ' /etc/passwd | grep -v ninguém | wc -l )Claroecho -e " \033[0;35m╔─━━━━━━━━━━━━━━━━━━━━━━━VIP VPS━━━━━━━━━━━VIP VPS━━━━━━━━━━━━━━ ━━━━━━━━─╗\033[0m "echo -e " \E[42;1;37m • SPEEDNET PLUS • \E[0m "echo -e " \033[0;35m╚━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━. ━━━━━━━━━━━━━━╝\033[0m "echo -e " \033[1;32mSISTEMA MEMÓRIA RAM PROCESSADOR "echo -e " \033[1;31mOS: \033[1;37m $_system \033[1;31mTotal:\033[1;37m $_ram \033[1;31mNucleos: \033[1;37m $_core \ 033[0m "echo -e " \033[1;31mHora: \033[1;37m $_hora \033[1;31mEm uso: \033[1;37m $_usor \033[1;31mEm uso: \033[1;37m $ _usop \033[0m "echo -e " \033[0;35m╔━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━. ━━━━━━━━━━━━━━╗\033[0m "echo -e " \033[1;32mOnlines:\033[1;37m $_onlin \033[1;31mExpirados: \033[1;37m $_userexp \033[1;33mTotal: \033[1;37m $_tuser \ 033[0m "echo -e " \033[0;35m╚━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━. ━━━━━━━━━━━━━━╝\033[0m "echo -e " \033[1;31m[\033[1;36m01\033[1;31m] \033[1;37m• \033[1;33mCRIAR USUARIO \033[1;31m [\033[1; 36m11\033[1;31m] \033[1;37m• \033[1;33mESPEEDTEST\033[1;31m[\033[1;36m02\033[1;31m] \033[1;37m• \033[1;33mCRIAR USUARIO TESTE \033[1;31m [\033[1;36m12\033[1;31m]] \ 033[1;37m• \033[1;33mBANNER \033[1;31m[\033[1;36m03\033[1;31m] \033[1;37m\033[1;37m• \033[1;33mREMOVER USUARIO \033[1;31m [\033[1;36m13\033[ 1;31m] \033[1;37m• \033[1;33mTRAFEGO \033[1;31m[\033[1;36m04\033[1;31m] \033[1;37m• \033[1;33mMONITOR ONLINE \033[1;31m [\033[1;36m14\033[1;31m]] \033 [1;37m• \033[1;33mOTIMIZAR \033[1;31m[\033[1;36m05\033[1;31m] \033[1;37m• \033[1;33mMUDAR DATA \033[1;31m [\033[1;36m15\033[1;31m]] \033 [1;37m• \033[1;33mBACKUP \033[1;31m[\033[1;36m06\033[1;31m] \033[1;37m• \033[1;33mALTERAR LIMITE \033[1;31m [\033[1;36m16\033[1;31m]] \033 [1;37m• \033[1;33mMEMORIA VIRTUAL\033[1;31m[\033[1;36m07\033[1;31m] \033[1;37m• \033[1;33mMUDAR SENHA \033[1;31m [\033[1;36m17\033[1;31m]] \033 [1;37m• \033[1;33mLIMITER $stsl \033[1;31m[\033[1;36m08\033[1;31m] \033[1;37m• \033[1;33mREMOVER EXPIRADOS \033[1;31m [\033[1;36m18\033[1;31m]] \033 [1;37m• \033[1;33mBAD VPN $stsu \033[1;31m[\033[1;36m09\033[1;31m] \033[1;37m• \033[1;33mRELATORIO DE USUARIOS \033[1;31m [\033[1;36m19\033[1;31m]] \ 033[1;37m• \033[1;33mAPLICATIVO ONLINE $stson \033[1;31m[\033[1;36m10\033[1;31m] \033[1;37m• \033[1;33mMODO DE CONEXAO \033[1;31m [\033[1;36m20\033[1;31m]] \ 033[1;37m• \033[1;33mINFO VPS \033[1;31m>\033[1;33m>\033[1;32m>\033[0m\033[1;31m][\033[1;36m00\033[1;31m] \033[1;37m• \033[1;33mSAIR \033[1;31m [\033[1;36m21\033[1;31m] \033[ 1;37m• \033[1;33mMAIS\033[1;31m>\033[1;33m>\033[1;32m>\033[0m\033[1;31m "echo -e " \033[0;35m╚━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━. ━━━━━━━━━━━━━━╝\033[0m "echo -ne " ∎≫ \033[1;32mO QUE DESEJA FAZER \033[1;33m?\033[1;31m?\033[1;37m : " ; leia xcaso " $x " em 1 | 01) Claro criarusário echo -ne " \n\033[1;31mENTER \033[1;33mpara retornar ao \033[1;32mMENU!\033[0m " ; leitura ;; 2 | 02) Claro criarte echo -ne " \n\033[1;31mENTER \033[1;33mpara retornar ao \033[1;32mMENU!\033[0m " ; leitura ;; 3 | 03) Claro removedor dormir 3 ;; 4 | 04) Claro sshmonitor echo -ne " \n\033[1;31mENTER \033[1;33mpara retornar ao \033[1;32mMENU!\033[0m " ; leitura ;; 5 | 05) Claro mudar dados dormir 3 ;; 6 | 06) Claro alterarlimite dormir 3 ;; 7 | 07) Claro alterarsenha dormir 3 ;; 8 | 08) Claro ex-limpador eco " " dormir 3 ;; 9 | 09) Claro infousers echo -ne " \n\033[1;31mENTER \033[1;33mpara retornar ao \033[1;32mMENU!\033[0m " ; leitura ;; 10) conexão saída ; ;; 11) Claro velocidade echo -ne " \n\033[1;31mENTER \033[1;33mpara retornar ao \033[1;32mMENU!\033[0m " ; leitura ;; 12) Claro bandeira dormir 3 ;; 13) Claro echo -e " \033[1;32mPARA SAIR CLICK CTRL + C\033[1;36m " dormir 4 carregar ;; 14) Claro otimizar echo -ne " \n\033[1;31mENTER \033[1;33mpara retornar ao \033[1;32mMENU!\033[0m " ; leitura ;; 15) backup de usuário echo -ne " \n\033[1;31mENTER \033[1;33mpara retornar ao \033[1;32mMENU!\033[0m " ; leitura ;; 16) trocar memória ;; 17) limit_ssh ;; 18) Claro badvpn saída ; ;; 19) onapp_ssh ;; 20) Claro detalhes echo -ne " \n\033[1;31mENTER \033[1;33mpara retornar ao \033[1;32mMENU!\033[0m " ; leitura ;; 21) menu2 ;; 0 | 00) echo -e " \033[1;31mSaindo...\033[0m " dormir 2 Claro saída ; ;; * ) echo -e " \n\033[1;31mOpcao invalida !\033[0m " dormir 2esacfeito}cardápio
